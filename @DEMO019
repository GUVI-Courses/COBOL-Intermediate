       IDENTIFICATION DIVISION.
       PROGRAM-ID. DEMO019.
      *  DEMO ON - COBOL SEARCH ALL
      *
      * SEARCH ALL IS A BINARY SEARCH METHOD
      * ABLE MUST BE IN SORTED ORDER FOR SEARCH ALL OPTION
      *
      * THE INDEX DOES NOT REQUIRE INITIALIZATION. IN BINARY SEARCH, THE
      * TABLE IS DIVIDED INTO TWO HALVES AND IT DETERMINES IN WHICH HALF
      * THE SEARCHED ELEMENT IS PRESENT. THIS PROCESS REPEATS TILL THE
      * ELEMENT IS FOUND OR THE END IS REACHED.
      *
       DATA DIVISION.
       FILE SECTION.
       WORKING-STORAGE SECTION.
       01  WS-SRCHNUM   PIC X(1) VALUE SPACES.
       01  WS-ARRAY-VAL PIC X(11) VALUE SPACES.
       01  WS-SUB-VALUE PIC S9(4) COMP.
       01  WS-ARRAYS.
           05  WS-1D-ARRAY-IDX.
               10 WS-LTR   PIC X(1) OCCURS 11 TIMES ASCENDING KEY
-                                       WS-LTR INDEXED BY IDX.
       PROCEDURE DIVISION.
           DISPLAY ' *****   SEARCH ****'.
           PERFORM ACCEPT-NUM.
           PERFORM ARRAY-INDEX.
           PERFORM SEARCH-ARRAY.
           STOP RUN.
       ACCEPT-NUM.
           ACCEPT WS-ARRAY-VAL.
           ACCEPT WS-SRCHNUM.
       ARRAY-INDEX.
           MOVE WS-ARRAY-VAL TO WS-1D-ARRAY-IDX.
           DISPLAY 'ARRAY DATA IS : ' WS-1D-ARRAY-IDX.
           DISPLAY 'ELEMENT TO BE SEARCHED : ' WS-SRCHNUM
           PERFORM VARYING IDX FROM 1 BY 1 UNTIL IDX>11
             DISPLAY WS-LTR (IDX)
           END-PERFORM.
      *    DISPLAY '1-ARRAY:' WS-1D-ARRAY-IDX.
       SEARCH-ARRAY.
           SEARCH ALL WS-LTR
                  AT END DISPLAY WS-SRCHNUM " NOT FOUND"
                  WHEN WS-LTR (IDX) = WS-SRCHNUM
                       SET WS-SUB-VALUE TO IDX
                       DISPLAY 'FOUND SEARCH STRING ' WS-LTR(IDX)
                       ' AT POSITION ' WS-SUB-VALUE.
